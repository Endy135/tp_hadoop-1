[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Ubuntu Java 11.0.19)
[debug] Load.defaultLoad until apply took 117.301174ms
[debug]           Load.loadUnit: plugins took 148.079302ms
[debug]           Load.loadUnit: defsScala took 0.611701ms
[debug] [Loading] Scanning directory /home/abraham/IdeaProjects/tp_hadoop/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/abraham/IdeaProjects/tp_hadoop/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.84012 ms
[debug]               Load.resolveProject(tp_hadoop-build) took 94.390072ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tp_hadoop-build, base: /home/abraham/IdeaProjects/tp_hadoop/project, plugins: List(<none>))) took 172.115564ms
[debug] [Loading] Done in /home/abraham/IdeaProjects/tp_hadoop/project, returning: (tp_hadoop-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 223.360974ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.441106ms
[debug]         Load.loadUnit(file:/home/abraham/IdeaProjects/tp_hadoop/project/, ...) took 396.891902ms
[debug]       Load.apply: load took 657.454759ms
[debug]       Load.apply: resolveProjects took 14.007403ms
[debug]       Load.apply: finalTransforms took 107.861545ms
[debug]       Load.apply: config.delegates took 10.70495ms
[debug]       Load.apply: Def.make(settings)... took 654.239927ms
[debug]       Load.apply: structureIndex took 130.340634ms
[debug]       Load.apply: mkStreams took 1.482443ms
[info] loading project definition from /home/abraham/IdeaProjects/tp_hadoop/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3234.197362ms
[debug]     Load.loadUnit: defsScala took 0.018345ms
[debug] [Loading] Scanning directory /home/abraham/IdeaProjects/tp_hadoop
[debug]       Load.loadUnit: mkEval took 8.52497ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.176718 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.725419ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/abraham/IdeaProjects/tp_hadoop, plugins: List(<none>))) took 7.568459ms
[debug] [Loading] Done in /home/abraham/IdeaProjects/tp_hadoop, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3286.973681ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.921099ms
[debug]   Load.loadUnit(file:/home/abraham/IdeaProjects/tp_hadoop/, ...) took 6529.388874ms
[debug] Load.apply: load took 6555.09717ms
[debug] Load.apply: resolveProjects took 0.120148ms
[debug] Load.apply: finalTransforms took 12.335834ms
[debug] Load.apply: config.delegates took 0.380445ms
[debug] Load.apply: Def.make(settings)... took 149.091739ms
[debug] Load.apply: structureIndex took 47.904178ms
[debug] Load.apply: mkStreams took 0.002294ms
[info] set current project to tp_hadoop (in build file:/home/abraham/IdeaProjects/tp_hadoop/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/abraham/.sbt/1.0/server/89fe8a7b912cc5f2b4b2/sock
[debug] Writing bsp connection file
[info] started sbt server
